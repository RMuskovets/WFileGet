//======================================================
// Source code generated by jvider v1.8.1 UNREGISTERED version.
// http://www.jvider.com/
//======================================================
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JPanel;
import javax.swing.BorderFactory;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import java.io.*;
import java.util.*;
import javax.swing.table.*;
import java.awt.event.*;
import java.net.*;
public class SUI extends JFrame {
	static SUI theSUI;

	JPanel panel0;
	JTable files;
	JButton dload;
	public static void main(String args[]) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (ClassNotFoundException e) {
		}
		catch (InstantiationException e) {
		}
		catch (IllegalAccessException e) {
		}
		catch (UnsupportedLookAndFeelException e) {
		}
		theSUI = new SUI();
	} 

	private static String ga() throws Exception {
		Process proc = Runtime.getRuntime().exec("net view");
		String s = "";
		try {
			BufferedInputStream bis = new BufferedInputStream(proc.getInputStream());
			int c;
			while ((c = bis.read()) != -1) s += String.valueOf((char) c);
		} catch (IOException e) {
			System.err.println(e);
		}
		Thread.sleep(50);
		return s;
	}
	public static List<String> getAllPCs() throws Exception {
		Process proc = Runtime.getRuntime().exec("net view");
		String s = ga();
		List<String> all = new ArrayList(Arrays.asList(s.split("\n")));
		all.removeIf(t -> !t.startsWith("\\"));
		all.replaceAll(t -> t.substring(2));
		all.replaceAll(t -> t.replaceAll("[^A-Za-z0-9]", ""));
		return all;
	}

	public SUI() {
		super("Server");

		panel0 = new JPanel();
		GridBagLayout gbpanel0 = new GridBagLayout();
		GridBagConstraints gbcpanel0 = new GridBagConstraints();
		panel0.setLayout(gbpanel0);
		{ // Table
		String [][]datafiles = new String[20][4];
		try {
			List<String> pcs = getAllPCs();
			for (int i = 0; i < pcs.size() && i < datafiles.length; i ++) {
				String pc = pcs.get(i);
				datafiles[i][0] = pc;
			}
		} catch (Exception e) {
			throw new RuntimeException();
		}

		String []colsfiles = new String[] {"Computer","File name & path",
		                                       "Last use date","Size of file"};
		files = new JTable(new DefaultTableModel(datafiles,colsfiles));
		}
		JScrollPane scpfiles = new JScrollPane(files);
		gbcpanel0.gridx = 0;
		gbcpanel0.gridy = 0;
		gbcpanel0.gridwidth = 20;
		gbcpanel0.gridheight = 18;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 1;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(scpfiles, gbcpanel0);
		panel0.add(scpfiles);

		dload = new JButton("Download");
		dload.addActionListener(this::downloadFile);
		gbcpanel0.gridx = 0;
		gbcpanel0.gridy = 19;
		gbcpanel0.gridwidth = 1;
		gbcpanel0.gridheight = 1;
		gbcpanel0.fill = GridBagConstraints.BOTH;
		gbcpanel0.weightx = 1;
		gbcpanel0.weighty = 0;
		gbcpanel0.anchor = GridBagConstraints.NORTH;
		gbpanel0.setConstraints(dload, gbcpanel0);
		panel0.add(dload);

		setDefaultCloseOperation(EXIT_ON_CLOSE);

		setContentPane(panel0);
		pack();
		setVisible(true);
	}

	public void downloadFile(ActionEvent e) {
		int row_ind = files.getSelectedRow();
		if (row_ind != -1) {
			Vector row = ((Vector)((DefaultTableModel) files.getModel()).getDataVector().elementAt(row_ind));
			String compIp = getComputerIp((String)row.elementAt(0));
			System.out.println(compIp);
		}
	}
// All shared files MUST be in folder named 'shared' and this folder
// MUST be placed in the same folder with WFileGet Client JAR.
	public String getComputerIp(String name) {
		String ip = null;
		try {
			ip = InetAddress.getByName(name).getHostAddress();
		} catch (Exception e) {
		}
		return ip;
	}
}